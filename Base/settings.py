"""
Django settings for Melter project.

Generated by 'django-admin startproject' using Django 2.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


BASE_DIR = os.path.dirname(os.path.dirname(
    os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# TODO: Remove from production code and keep safe
SECRET_KEY = '7e^2_gmy1bjb=ua3kkrv^u#5xvm=ca3$!5kyk$rf^a(6&=32$1'

# TODO:Set to False in production
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# TODO: NEED TO CONFIGURE TO GET PAST FIREWALLS AND HOST INDEPENDENTLY
ALLOWED_HOSTS = ['10.22.113.34', 'localhost']


# Application definition
# NOTE: UNCOMMENT APPS AS THEY BECOME FUNCTIONAL
INSTALLED_APPS = [

    # TODO: Overview of Sprints, Basepage to view current sprint objectives and information
    'Apps.Sprints',

    # TODO: Bread and Butter page, Overview of builds with blocks to show status and events related to induvidual builds
    'Apps.BuildManager',

    # TODO: A feature that is in the dream, where all tasks for developers are listend and sorted. Can be ticked or taken care of by any developer
    # Listed by priority
    # Build failures and red/yellow flags will be automatically bucketed by this testing framework and added to this list, the more failures related the higher the priority
    'Apps.TaskPage',

    # TODO: Requests to Administration Team
    'Apps.ReachOut',

    # TODO: Testing and metrics page, search page to find and view valid information
    'Apps.TestViews',


    # DJANGO NATIVE APPS
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'Backend\\data\\templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Base.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
# TODO: Change to MariaDB,MySQL, ect... AND store password in seperate file.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'BuildMelter',
        'USER': 'BuildMelterAdmin',
        'PASSWORD': '12qwaszx',
        'HOST': 'localhost',
        'PORT': '3306',

    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = 'static/'
print(BASE_DIR)
LOCAL_STATIC_CDN_PATH = os.path.join(
    os.path.dirname(BASE_DIR), 'melter\\backend\\data')
STATIC_ROOT = os.path.join(LOCAL_STATIC_CDN_PATH, 'static')  # live CDN

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'backend\\data\\static')
]
